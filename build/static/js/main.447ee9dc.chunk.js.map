{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/Person.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","console","log","axios","get","then","response","data","newObject","post","id","put","delete","Filter","newFilter","handleFilter","value","onChange","Person","name","number","deleteEntry","onClick","PersonForm","props","newName","handleNameChange","newNumber","handleNumberChange","type","addPerson","Notification","message","error","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","notification","setNotification","useEffect","pbService","initialBook","personsToShow","filter","toLowerCase","startsWith","event","target","preventDefault","personObject","person","find","n","undefined","returnedPerson","concat","catch","addPersonObject","window","confirm","updatedItem","map","update","setTimeout","request","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.447ee9dc.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    console.log(baseUrl)\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteEntry = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update, deleteEntry}","import React from 'react'\n\nconst Filter = ({newFilter, handleFilter}) => {\n    return(\n    <div>\n        filter shown with <input value={newFilter} onChange={handleFilter}/>\n    </div>\n    )\n} \n\nexport default Filter","import React from 'react'\n\nconst Person = ({name, number, deleteEntry}) => {\n    return (\n        <li>{name} {number} <button onClick={deleteEntry}>delete</button></li>\n    )\n}\n\nexport default Person","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    return(\n        <form>\n            <div>\n                <h2>add a new</h2>\n                name: <input value={props.newName} onChange={props.handleNameChange}/>\n            </div>\n            <div>\n                number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n            </div>\n            <div>\n                <button type=\"submit\" onClick={props.addPerson}>Add</button>\n            </div>\n        </form>    \n    )\n    \n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({message, error}) => {\n\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div className={error}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, userEffect, useEffect } from 'react'\nimport pbService from './services/phonebook.js'\nimport Filter from './components/Filter.js'\nimport Person from './components/Person.js'\nimport PersonForm from './components/PersonForm.js'\nimport Notification from './components/Notification.js'\n\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [ notification, setNotification] = useState('notification')\n\n  useEffect(() => {\n    pbService\n      .getAll()\n        .then(initialBook => {\n        setPersons(initialBook)\n      })\n    }, [])\n\n  const deleteEntry = id => {\n    const name = persons.find(n => n.id === id).name\n    const confirm = window.confirm(`delete ${name}?`)\n    if(confirm){\n      pbService\n        .deleteEntry(id)\n        .then(request => {\n          setErrorMessage(`Deleted ${name}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n      })\n    }\n  }\n    \n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const update = (id, personObject) => {\n      const confirm = window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n      if(confirm){\n        pbService\n          .update(id, personObject)\n          .then(updatedItem => {\n            setPersons(persons.map(person => person.id !== id ? person : updatedItem))\n            setNotification('notification')\n            setErrorMessage(`Updated ${personObject.name}`)\n        }).catch(error => {\n          setNotification('error')\n          setErrorMessage(`${personObject.name} already removed from the server`)\n          setPersons(persons.filter(n =>n.id !== id))\n        })\n      }\n    }\n\n    const addPersonObject = personObject => {\n      pbService\n        .create(personObject)\n        .then(returnedPerson => {\n          setNotification('notification')\n          setPersons(persons.concat(returnedPerson))\n          setErrorMessage(`Added ${personObject.name} to phonebook`)\n        }).catch(error => {\n          setNotification('error')\n          setErrorMessage(error.response.data.error)\n        })\n    }\n\n    const person = persons.find(n => n.name === personObject.name)\n    person === undefined ? addPersonObject(personObject) : update(person.id, personObject)\n\n    setNewName('')\n    setNewNumber('')\n\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 3000)\n  }\n\n  const handleNameChange = (event) => {setNewName(event.target.value)}\n  const handleNumberChange = (event) => {setNewNumber(event.target.value)}\n  const handleFilter = (event) => {setNewFilter(event.target.value)}\n  \n  const personsToShow = newFilter !== '' ? persons.filter(({name}) => name.toLowerCase().startsWith(newFilter.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} error={notification}/>\n      <Filter newFilter={newFilter} handleFilter={handleFilter}/>\n      <PersonForm newName={newName} \n          handleNameChange={handleNameChange} \n          newNumber={newNumber} \n          handleNumberChange={handleNumberChange} \n          addPerson={addPerson}/>\n      <h2>Numbers</h2>\n      {personsToShow.map(person => \n        <Person \n          key={person.name} \n          name={person.name} \n          number={person.number} \n          deleteEntry={() => deleteEntry(person.id)}/>)}\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}